/**
 * Adapted from https://www.microsoft.com/en-us/research/wp-content/uploads/2016/12/krml220.pdf
 */
module FibM
{
    function fib(n: nat): nat
    {
        if n == 0 then 0 else
        if n == 1 then 1 else
            fib(n - 1) + fib(n - 2)
    }

    method ComputeFib(n: nat) returns (f: nat)
    ensures f == fib(n);
    {
        var fnext := 1;
        f := 0;     

        for i := 0 to n
            invariant f == fib(i);
            invariant fnext == fib(i+1);        
        {
            f, fnext := fnext, f + fnext;
        }
    }
}