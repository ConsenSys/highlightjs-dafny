<span class="hljs-comment">/**
 * Adapted from https://www.microsoft.com/en-us/research/wp-content/uploads/2016/12/krml220.pdf
 */</span>
<span class="hljs-keyword">module</span> <span class="hljs-title class_">FibM</span>
{
    <span class="hljs-keyword">function</span> <span class="hljs-title function_">fib</span><span class="hljs-params">(n<span class="hljs-operator">:</span> <span class="hljs-type">nat</span>)</span><span class="hljs-operator">:</span> <span class="hljs-type">nat</span>
    {
        <span class="hljs-keyword">if</span> n <span class="hljs-operator">==</span> <span class="hljs-number">0</span> <span class="hljs-keyword">then</span> <span class="hljs-number">0</span> <span class="hljs-keyword">else</span>
        <span class="hljs-keyword">if</span> n <span class="hljs-operator">==</span> <span class="hljs-number">1</span> <span class="hljs-keyword">then</span> <span class="hljs-number">1</span> <span class="hljs-keyword">else</span>
            <span class="hljs-title function_">fib</span><span class="hljs-params">(n <span class="hljs-operator">-</span> <span class="hljs-number">1</span>)</span> <span class="hljs-operator">+</span> fib(n <span class="hljs-operator">-</span> <span class="hljs-number">2</span>)
    }

    <span class="hljs-keyword">method</span> <span class="hljs-title function_">ComputeFib</span><span class="hljs-params">(n<span class="hljs-operator">:</span> <span class="hljs-type">nat</span>)</span> <span class="hljs-keyword">returns</span> (f<span class="hljs-operator">:</span> <span class="hljs-type">nat</span>)
    <span class="hljs-keyword">ensures</span> f <span class="hljs-operator">==</span> fib(n);
    {
        <span class="hljs-keyword">var</span> fnext <span class="hljs-operator">:=</span> <span class="hljs-number">1</span>;
        f <span class="hljs-operator">:=</span> <span class="hljs-number">0</span>;     

        <span class="hljs-keyword">for</span> i <span class="hljs-operator">:=</span> <span class="hljs-number">0</span> to n
            <span class="hljs-keyword">invariant</span> f <span class="hljs-operator">==</span> fib(i);
            <span class="hljs-keyword">invariant</span> fnext <span class="hljs-operator">==</span> fib(i+<span class="hljs-number">1</span>);        
        {
            f, fnext <span class="hljs-operator">:=</span> fnext, f <span class="hljs-operator">+</span> fnext;
        }
    }
}